/**
 * spidermix 0.1.0
 * (Tayira)
 */

(function (global) {
  "use strict";

  // Function to optimize HTML by removing unnecessary whitespace
  function optimizeHTML() {
    document.body.innerHTML = document.body.innerHTML.replace(/>\s+</g, "><");
  }

  // Function to optimize scripts by deferring non-essential scripts
  function optimizeScripts() {
    document
      .querySelectorAll("script:not([src*='unpkg.com/@babel/standalone'])")
      .forEach((script) => {
        script.defer = true;
      });
  }

  // Function to lazy-load resources (images and iframes)
  function lazyLoadResources() {
    document.querySelectorAll("img, iframe").forEach((el) => {
      el.loading = "lazy";
    });
  }

  // Function to optimize CSS by delaying stylesheet loading
  function optimizeCSS() {
    document.querySelectorAll('link[rel="stylesheet"]').forEach((link) => {
      link.media = "print";
      link.onload = () => {
        link.media = "all";
      };
    });
  }

  // Function to optimize all resources
  function optimizeAll() {
    optimizeHTML();
    optimizeScripts();
    lazyLoadResources();
    optimizeCSS();
  }

  // Run optimization on DOMContentLoaded
  document.addEventListener("DOMContentLoaded", optimizeAll);

  // Register service worker
  if ("serviceWorker" in navigator) {
    window.addEventListener("load", () => {
      navigator.serviceWorker
        .register("/service-worker.js")
        .then((registration) => {
          console.log(
            "Service Worker registered with scope:",
            registration.scope
          );
        })
        .catch((error) => {
          console.error("Service Worker registration failed:", error);
        });
    });
  }

  // Debounce function
  function debounce(func, wait) {
    let timeout;
    return function (...args) {
      clearTimeout(timeout);
      timeout = setTimeout(() => func.apply(this, args), wait);
    };
  }

  // Debounced resize event listener
  window.addEventListener(
    "resize",
    debounce(() => {
      // Add code to handle resize event here
    }, 250)
  );

  // Animate function (using requestAnimationFrame)
  function animate() {
    requestAnimationFrame(animate);
  }
  requestAnimationFrame(animate);

  // Expose spidermix API
  global.spidermix = {
    version: "0.1.0",
    optimizeAll,
  };

  // Add metadata for Wappalyzer detection
  global.spidermix.metadata = {
    name: "Spidermix",
    description: "A lightweight library for optimizing web performance",
    website:
      "https://github.com/TayiraCompany/TayiraCDNS/tree/main/spidermix/0.1.0",
    version: "0.1.0",
  };

  // Add a script tag with a unique identifier for Wappalyzer detection
  const script = document.createElement("script");
  script.src =
    "https://tayiracompany.github.io/TayiraCDNS/spidermix/0.1.0/spidermix.min.js";
  script.id = "spidermix-script";
  document.head.appendChild(script);
})(window);
